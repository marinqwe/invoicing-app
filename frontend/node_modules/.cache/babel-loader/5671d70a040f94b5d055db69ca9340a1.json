{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    invoicesConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PaginationStyles from './styles/Pagination';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config'; //pull \"data about data\" - invoicesConnection/itemsConnection/etc\n//returns info about the data, in this case the amount of invoices in db\n\nvar PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(props) {\n  return React.createElement(Query, {\n    query: PAGINATION_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (loading) return loading;\n    var count = data.invoicesConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    var page = props.page;\n    return React.createElement(PaginationStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Invoice list - page \", page, \" of \", pages)), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: '',\n        query: {\n          page: page - 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"prev\",\n      \"aria-disabled\": page <= 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u2B05\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Page \", page, \" of \", pages), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, count, \" invoices total!\"), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: '',\n        query: {\n          page: page + 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"prev\",\n      \"aria-disabled\": page >= pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u27A1\")));\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/Pagination.js"],"names":["React","PaginationStyles","Query","gql","Head","Link","perPage","PAGINATION_QUERY","Pagination","props","data","loading","error","count","invoicesConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;AACA;;AACA,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;;AAUA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BG,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC7B,QAAID,OAAJ,EAAa,OAAOA,OAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,kBAAL,CAAwBC,SAAxB,CAAkCF,KAAhD;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,QAAMa,IAAI,GAAGV,KAAK,CAACU,IAAnB;AACA,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuBA,IADvB,UACiCH,KADjC,CADF,CADF,EAME,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJI,QAAAA,QAAQ,EAAE,EADN;AAEJC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CANF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQA,IADR,UACkBH,KADlB,CAjBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAJ,qBApBF,EAqBE,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJO,QAAAA,QAAQ,EAAE,EADN;AAEJC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAIH,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CArBF,CADF;AAmCD,GAzCH,CADF;AA6CD,CA9CD;;AAgDA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport PaginationStyles from './styles/Pagination';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config';\n\n//pull \"data about data\" - invoicesConnection/itemsConnection/etc\n//returns info about the data, in this case the amount of invoices in db\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    invoicesConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return loading;\n        const count = data.invoicesConnection.aggregate.count;\n        const pages = Math.ceil(count / perPage);\n        const page = props.page;\n        return (\n          <PaginationStyles>\n            <Head>\n              <title>\n                Invoice list - page {page} of {pages}\n              </title>\n            </Head>\n            <Link\n              prefetch\n              href={{\n                pathname: '',\n                query: { page: page - 1 }\n              }}\n            >\n              <a className=\"prev\" aria-disabled={page <= 1}>\n                ⬅\n              </a>\n            </Link>\n            <p>\n              Page {page} of {pages}\n            </p>\n            <p>{count} invoices total!</p>\n            <Link\n              prefetch\n              href={{\n                pathname: '',\n                query: { page: page + 1 }\n              }}\n            >\n              <a className=\"prev\" aria-disabled={page >= pages}>\n                ➡\n              </a>\n            </Link>\n          </PaginationStyles>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}