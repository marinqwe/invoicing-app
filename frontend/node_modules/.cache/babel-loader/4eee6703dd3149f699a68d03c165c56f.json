{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/TogglePaid.js\";\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport { UPDATE_INVOICE_MUTATION } from './UpdateInvoice';\nimport styled from 'styled-components';\nvar HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n}).withConfig({\n  displayName: \"TogglePaid__HiddenCheckbox\",\n  componentId: \"sc-1oscvil-0\"\n})([\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px;\"]);\nvar StyledCheckbox = styled.div.withConfig({\n  displayName: \"TogglePaid__StyledCheckbox\",\n  componentId: \"sc-1oscvil-1\"\n})([\"border-radius:3px;transition:all 150ms;display:inline-block;width:16px;height:16px;cursor:pointer;background:\", \";\", \":focus + &{box-shadow:0 0 0 3px black;}\", \"{visibility:\", \";}\"], function (props) {\n  return props.checked ? props.blue : props.lightgrey;\n}, HiddenCheckbox, Icon, function (props) {\n  return props.checked ? 'visible' : 'hidden';\n});\nvar CheckboxContainer = styled.div.withConfig({\n  displayName: \"TogglePaid__CheckboxContainer\",\n  componentId: \"sc-1oscvil-2\"\n})([\"display:inline-block;vertical-align:middle;\"]);\nvar Icon = styled.svg.withConfig({\n  displayName: \"TogglePaid__Icon\",\n  componentId: \"sc-1oscvil-3\"\n})([\"fill:none;stroke:white;stroke-width:2px;\"]);\n\nvar TogglePaid = function TogglePaid(_ref) {\n  var vars = _ref.vars,\n      checked = _ref.checked;\n  return React.createElement(Mutation, {\n    mutation: UPDATE_INVOICE_MUTATION,\n    variables: _objectSpread({}, vars, {\n      isPaid: !vars.isPaid\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, function (updateInvoice, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading;\n    return React.createElement(CheckboxContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(HiddenCheckbox, {\n      defaultChecked: checked,\n      onClick:\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return updateInvoice();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(StyledCheckbox, {\n      defaultChecked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"polyline\", {\n      points: \"20 6 9 17 4 12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  });\n};\n\nexport default TogglePaid;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/TogglePaid.js"],"names":["React","Mutation","UPDATE_INVOICE_MUTATION","styled","HiddenCheckbox","input","attrs","type","StyledCheckbox","div","props","checked","blue","lightgrey","Icon","CheckboxContainer","svg","TogglePaid","vars","isPaid","updateInvoice","error","loading"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,cAAc,GAAGD,MAAM,CAACE,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAH;AAAA;AAAA;AAAA,yJAApB;AAaA,IAAMC,cAAc,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,4LAOJ,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACE,IAAtB,GAA6BF,KAAK,CAACG,SAAxC;AAAA,CAPD,EAQhBT,cARgB,EAYhBU,IAZgB,EAaF,UAAAJ,KAAK;AAAA,SAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,QAAjC;AAAA,CAbH,CAApB;AAiBA,IAAMI,iBAAiB,GAAGZ,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,mDAAvB;AAKA,IAAMK,IAAI,GAAGX,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,gDAAV;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASP,OAAT,QAASA,OAAT;AAAA,SACjB,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAET,uBAApB;AAA6C,IAAA,SAAS,oBAAOgB,IAAP;AAAaC,MAAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAA3B,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,aAAD,SAAuC;AAAA,QAArBC,KAAqB,SAArBA,KAAqB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AACtC,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,cAAc,EAAEX,OADlB;AAEE,MAAA,OAAO;AAAA;AAAA;AAAA;AAAA,+BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACDS,aAAa,EADZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,cAAD;AAAgB,MAAA,cAAc,EAAET,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,MAAM,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAPF,CADF;AAeD,GAjBH,CADiB;AAAA,CAAnB;;AAsBA,eAAeM,UAAf","sourcesContent":["import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport { UPDATE_INVOICE_MUTATION } from './UpdateInvoice';\nimport styled from 'styled-components';\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n  border-radius: 3px;\n  transition: all 150ms;\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  background: ${props => (props.checked ? props.blue : props.lightgrey)};\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px black;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')};\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\nconst TogglePaid = ({ vars, checked }) => (\n  <Mutation mutation={UPDATE_INVOICE_MUTATION} variables={{ ...vars, isPaid: !vars.isPaid }}>\n    {(updateInvoice, { error, loading }) => {\n      return (\n        <CheckboxContainer>\n          <HiddenCheckbox\n            defaultChecked={checked}\n            onClick={async () => {\n              await updateInvoice();\n            }}\n          />\n          <StyledCheckbox defaultChecked={checked}>\n            <Icon viewBox=\"0 0 24 24\">\n              <polyline points=\"20 6 9 17 4 12\" />\n            </Icon>\n          </StyledCheckbox>\n        </CheckboxContainer>\n      );\n    }}\n  </Mutation>\n);\n\nexport default TogglePaid;\n"]},"metadata":{},"sourceType":"module"}