{"ast":null,"code":"var _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/InvoicePreview.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport InvoicePreviewStyles from './styles/Invoice';\nimport ItemList from './ItemList';\nimport generatePdf from '../lib/GeneratePdf';\nimport TotalPrice from '../lib/CalcPrice';\nimport formatMoney, { formatCurrency } from '../lib/formatMoney';\n\nvar InvoicePreview = function InvoicePreview(_ref) {\n  var invoice = _ref.invoice,\n      _ref$invoice = _ref.invoice,\n      id = _ref$invoice.id,\n      name = _ref$invoice.name,\n      items = _ref$invoice.items,\n      currency = _ref$invoice.currency,\n      status = _ref$invoice.status,\n      createdAt = _ref$invoice.createdAt;\n  var totalPrice = TotalPrice(items);\n  return React.createElement(InvoicePreviewStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, ' ', React.createElement(\"button\", {\n    onClick: function onClick() {\n      generatePdf(invoice);\n      console.log('Generated invoice');\n    },\n    disabled: status === 'CREDITED',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Generate PDF\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"` ` `\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"[INV-\", name.yearIssued, \"-\", name.sfx, \"]\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"-----------------------------\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Created on: \", moment(createdAt).format('MMMM Do YYYY'), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), items.length > 0 ? React.createElement(React.Fragment, null, React.createElement(ItemList, {\n    items: items,\n    invoiceId: id,\n    currency: currency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"No items added.\"), \"-----------------------------\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"TOTAL: \", formatCurrency(currency), ' ', formatMoney(totalPrice)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \"` ` `\"));\n};\n\nexport default InvoicePreview;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/InvoicePreview.js"],"names":["React","moment","InvoicePreviewStyles","ItemList","generatePdf","TotalPrice","formatMoney","formatCurrency","InvoicePreview","invoice","id","name","items","currency","status","createdAt","totalPrice","console","log","yearIssued","sfx","format","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,IAAsBC,cAAtB,QAA4C,oBAA5C;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA4E;AAAA,MAAzEC,OAAyE,QAAzEA,OAAyE;AAAA,0BAAhEA,OAAgE;AAAA,MAArDC,EAAqD,gBAArDA,EAAqD;AAAA,MAAjDC,IAAiD,gBAAjDA,IAAiD;AAAA,MAA3CC,KAA2C,gBAA3CA,KAA2C;AAAA,MAApCC,QAAoC,gBAApCA,QAAoC;AAAA,MAA1BC,MAA0B,gBAA1BA,MAA0B;AAAA,MAAlBC,SAAkB,gBAAlBA,SAAkB;AACjG,MAAMC,UAAU,GAAGX,UAAU,CAACO,KAAD,CAA7B;AACA,SACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbR,MAAAA,WAAW,CAACK,OAAD,CAAX;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAJH;AAKE,IAAA,QAAQ,EAAEJ,MAAM,KAAK,UALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,WAEQH,IAAI,CAACQ,UAFb,OAE0BR,IAAI,CAACS,GAF/B,OAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpC,mCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,kBAKenB,MAAM,CAACc,SAAD,CAAN,CAAkBM,MAAlB,CAAyB,cAAzB,CALf,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGT,KAAK,CAACU,MAAN,GAAe,CAAf,GACC,0CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAwB,IAAA,SAAS,EAAEF,EAAnC;AAAuC,IAAA,QAAQ,EAAEG,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,GAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,mCAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUN,cAAc,CAACM,QAAD,CADxB,EACoC,GADpC,EAEGP,WAAW,CAACU,UAAD,CAFd,CAjBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,UAXF,CADF;AAqCD,CAvCD;;AAyCA,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport InvoicePreviewStyles from './styles/Invoice';\nimport ItemList from './ItemList';\nimport generatePdf from '../lib/GeneratePdf';\nimport TotalPrice from '../lib/CalcPrice';\nimport formatMoney, { formatCurrency } from '../lib/formatMoney';\n\nconst InvoicePreview = ({ invoice, invoice: { id, name, items, currency, status, createdAt } }) => {\n  const totalPrice = TotalPrice(items);\n  return (\n    <InvoicePreviewStyles>\n      {' '}\n      <button\n        onClick={() => {\n          generatePdf(invoice);\n          console.log('Generated invoice');\n        }}\n        disabled={status === 'CREDITED'}\n      >\n        Generate PDF\n      </button>\n      <div>\n        ` ` `<br />\n        [INV-{name.yearIssued}-{name.sfx}]<br />\n        -----------------------------\n        <br />\n        Created on: {moment(createdAt).format('MMMM Do YYYY')}\n        <br />\n        {items.length > 0 ? (\n          <>\n            <ItemList items={items} invoiceId={id} currency={currency} />\n            <br />\n          </>\n        ) : (\n          <p>No items added.</p>\n        )}\n        -----------------------------\n        <br />\n        <p>\n          TOTAL: {formatCurrency(currency)}{' '}\n          {formatMoney(totalPrice)}\n        </p>\n        <br />` ` `\n      </div>\n    </InvoicePreviewStyles>\n  );\n};\n\nexport default InvoicePreview;\n"]},"metadata":{},"sourceType":"module"}