{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/Search.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_INVOICES_QUERY($searchTerm: String!) {\\n    invoices(\\n      where: {\\n        OR: [\\n          { status_contains: $searchTerm }\\n          { currency_contains: $searchTerm }\\n          { name: { OR: [{ sfx_contains: $searchTerm }, { yearIssued_contains: $searchTerm }] } }\\n        ]\\n      }\\n    ) {\\n      id\\n      name {\\n        id\\n        sfx\\n        yearIssued\\n      }\\n      currency\\n      status\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Downshift, { resetIdCounter } from 'downshift';\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/Dropdown';\n\nfunction routeToInvoice(invoice) {\n  Router.push({\n    pathname: '/invoice',\n    query: {\n      id: invoice.id\n    }\n  });\n}\n\nvar SEARCH_INVOICES_QUERY = gql(_templateObject());\n\nvar AutoComplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoComplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      invoices: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", debounce(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, client) {\n        var search, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('Searching....');\n                search = e.target.value;\n\n                _this.setState(function () {\n                  return {\n                    loading: true\n                  };\n                });\n\n                if (!search.length) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 6;\n                return client.query({\n                  query: SEARCH_INVOICES_QUERY,\n                  variables: {\n                    searchTerm: search\n                  }\n                });\n\n              case 6:\n                res = _context.sent;\n\n                _this.setState(function () {\n                  return {\n                    invoices: res.data.invoices,\n                    loading: false\n                  };\n                });\n\n                _context.next = 11;\n                break;\n\n              case 10:\n                _this.setState(function () {\n                  return {\n                    loading: false\n                  };\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 350));\n\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      resetIdCounter();\n      return React.createElement(SearchStyles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Downshift, {\n        itemToString: function itemToString(item) {\n          return item === null ? '' : \"INV-\".concat(item.name.yearIssued, \"-\").concat(item.name.sfx);\n        },\n        onChange: routeToInvoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, //render prop that exposes useful props for dropdown\n      function (_ref2) {\n        var getInputProps = _ref2.getInputProps,\n            getItemProps = _ref2.getItemProps,\n            isOpen = _ref2.isOpen,\n            inputValue = _ref2.inputValue,\n            highlightedIndex = _ref2.highlightedIndex;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(ApolloConsumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, function (client) {\n          return React.createElement(\"input\", _extends({}, getInputProps({\n            type: 'search',\n            placeholder: 'Search for invoices...',\n            id: 'search',\n            className: _this2.state.loading ? 'loading' : '',\n            onChange: function onChange(e) {\n              e.persist();\n\n              _this2.onChange(e, client);\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }));\n        }), isOpen && React.createElement(DropDown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, _this2.state.invoices.map(function (item, index) {\n          return React.createElement(DropDownItem, _extends({}, getItemProps({\n            item: item\n          }), {\n            key: item.id,\n            highlighted: index === highlightedIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"INV-\", item.name.yearIssued, \"-\", item.name.sfx, \" -- Status: \", item.status));\n        }), !_this2.state.invoices.length && !_this2.state.loading && React.createElement(DropDownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"No invoices found.\") //inputValue can be added to show users search input\n        ));\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/Search.js"],"names":["React","Downshift","resetIdCounter","Router","ApolloConsumer","gql","debounce","DropDown","DropDownItem","SearchStyles","routeToInvoice","invoice","push","pathname","query","id","SEARCH_INVOICES_QUERY","AutoComplete","invoices","loading","e","client","console","log","search","target","value","setState","length","variables","searchTerm","res","data","item","name","yearIssued","sfx","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","type","placeholder","className","state","onChange","persist","map","index","status","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Downshift, { resetIdCounter } from 'downshift';\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/Dropdown';\n\nfunction routeToInvoice(invoice) {\n  Router.push({\n    pathname: '/invoice',\n    query: {\n      id: invoice.id\n    }\n  });\n}\n\nconst SEARCH_INVOICES_QUERY = gql`\n  query SEARCH_INVOICES_QUERY($searchTerm: String!) {\n    invoices(\n      where: {\n        OR: [\n          { status_contains: $searchTerm }\n          { currency_contains: $searchTerm }\n          { name: { OR: [{ sfx_contains: $searchTerm }, { yearIssued_contains: $searchTerm }] } }\n        ]\n      }\n    ) {\n      id\n      name {\n        id\n        sfx\n        yearIssued\n      }\n      currency\n      status\n    }\n  }\n`;\n\nclass AutoComplete extends React.Component {\n  state = {\n    invoices: [],\n    loading: false\n  };\n\n  onChange = debounce(async (e, client) => {\n    console.log('Searching....');\n    const search = e.target.value;\n\n    this.setState(() => ({ loading: true }));\n\n    if (search.length) {\n      const res = await client.query({\n        query: SEARCH_INVOICES_QUERY,\n        variables: {\n          searchTerm: search\n        }\n      });\n      this.setState(() => ({\n        invoices: res.data.invoices,\n        loading: false\n      }));\n    } else {\n      this.setState(() => ({\n        loading: false\n      }));\n    }\n  }, 350);\n\n  render() {\n    resetIdCounter();\n    return (\n      <SearchStyles>\n        <Downshift\n          itemToString={item => (item === null ? '' : `INV-${item.name.yearIssued}-${item.name.sfx}`)}\n          onChange={routeToInvoice}\n        >\n          {//render prop that exposes useful props for dropdown\n          ({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      type: 'search',\n                      placeholder: 'Search for invoices...',\n                      id: 'search',\n                      className: this.state.loading ? 'loading' : '',\n                      onChange: e => {\n                        e.persist();\n                        this.onChange(e, client);\n                      }\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              {isOpen && (\n                <DropDown>\n                  {this.state.invoices.map((item, index) => (\n                    <DropDownItem {...getItemProps({ item })} key={item.id} highlighted={index === highlightedIndex}>\n                      <p>\n                        INV-{item.name.yearIssued}-{item.name.sfx} -- Status: {item.status}\n                      </p>\n                    </DropDownItem>\n                  ))}\n                  {!this.state.invoices.length && !this.state.loading && (\n                    <DropDownItem>No invoices found.</DropDownItem> //inputValue can be added to show users search input\n                  )}\n                </DropDown>\n              )}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}