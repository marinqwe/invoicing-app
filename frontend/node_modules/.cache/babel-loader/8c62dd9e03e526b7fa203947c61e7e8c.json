{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/InvoiceList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query QUERY_ALL_INVOICES($skip: Int = 0, $first: Int = \", \", $filter: String!) {\\n    invoices(orderBy: createdAt_DESC, first: $first, skip: $skip, where: $filter) {\\n      id\\n      status\\n      currency\\n      isPaid\\n      createdAt\\n      name {\\n        id\\n        sfx\\n        yearIssued\\n      }\\n      items {\\n        id\\n        description\\n        price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport InvoiceListItem from './InvoiceListItem';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\nvar StyledList = styled.div.withConfig({\n  displayName: \"InvoiceList__StyledList\",\n  componentId: \"icrp3f-0\"\n})([\"display:flex;flex-wrap:wrap;\"]);\nvar QUERY_ALL_INVOICES = gql(_templateObject(), perPage);\nvar Center = styled.div.withConfig({\n  displayName: \"InvoiceList__Center\",\n  componentId: \"icrp3f-1\"\n})([\"text-align:center;\"]);\n\nvar InvoiceList = function InvoiceList(props) {\n  return React.createElement(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    page: props.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Query, {\n    query: QUERY_ALL_INVOICES,\n    variables: {\n      skip: props.page * perPage - perPage\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    console.log('INVOICE LIST: ', data.invoices);\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return React.createElement(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n    return React.createElement(StyledList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, data.invoices.map(function (invoice) {\n      return React.createElement(InvoiceListItem, {\n        key: invoice.id,\n        invoice: invoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }));\n  }), React.createElement(Pagination, {\n    page: props.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default InvoiceList;\nexport { QUERY_ALL_INVOICES };","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/InvoiceList.js"],"names":["React","InvoiceListItem","gql","Query","styled","Pagination","perPage","StyledList","div","QUERY_ALL_INVOICES","Center","InvoiceList","props","page","skip","data","error","loading","console","log","invoices","map","invoice","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,oCAAhB;AAKA,IAAMC,kBAAkB,GAAGP,GAAH,oBACmCI,OADnC,CAAxB;AAsBA,IAAMI,MAAM,GAAGN,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,0BAAZ;;AAIA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAClB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,kBAAd;AAAkC,IAAA,SAAS,EAAE;AAC3CK,MAAAA,IAAI,EAAEF,KAAK,CAACC,IAAN,GAAaP,OAAb,GAAuBA;AADc,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,gBAA8B;AAAA,QAA3BS,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,IAAI,CAACK,QAAnC;AACA,QAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAID,KAAJ,EAAW,OAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACX,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO;AAAA,aACxB,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAEA,OAAO,CAACC,EAA9B;AAAkC,QAAA,OAAO,EAAED,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADwB;AAAA,KAAzB,CADH,CADF;AAOD,GAdH,CAFF,EAkBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEV,KAAK,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADkB;AAAA,CAApB;;AAuBA,eAAeF,WAAf;AACA,SAASF,kBAAT","sourcesContent":["import React from 'react';\nimport InvoiceListItem from './InvoiceListItem';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nconst StyledList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst QUERY_ALL_INVOICES = gql`\n  query QUERY_ALL_INVOICES($skip: Int = 0, $first: Int = ${perPage}, $filter: String!) {\n    invoices(orderBy: createdAt_DESC, first: $first, skip: $skip, where: $filter) {\n      id\n      status\n      currency\n      isPaid\n      createdAt\n      name {\n        id\n        sfx\n        yearIssued\n      }\n      items {\n        id\n        description\n        price\n      }\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst InvoiceList = (props) => (\n  <Center>\n    <Pagination page={props.page} />\n    <Query query={QUERY_ALL_INVOICES} variables={{\n      skip: props.page * perPage - perPage\n    }}>\n      {({ data, error, loading }) => {\n        console.log('INVOICE LIST: ', data.invoices);\n        if (loading) return <p>Loading...</p>;\n        if (error) return <Error error={error} />;\n        return (\n          <StyledList>\n            {data.invoices.map(invoice => (\n              <InvoiceListItem key={invoice.id} invoice={invoice} />\n            ))}\n          </StyledList>\n        );\n      }}\n    </Query>\n    <Pagination page={props.page} />\n  </Center>\n);\n\nexport default InvoiceList;\nexport { QUERY_ALL_INVOICES };\n"]},"metadata":{},"sourceType":"module"}