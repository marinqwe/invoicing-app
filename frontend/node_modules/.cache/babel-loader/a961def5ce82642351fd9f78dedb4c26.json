{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/UpdateInvoice.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_INVOICE_MUTATION($id: ID!, $currency: String!, $status: String!, $isPaid: Boolean!) {\\n    updateInvoice(id: $id, currency: $currency, status: $status, isPaid: $isPaid) {\\n      id\\n      currency\\n      status\\n      isPaid\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation, Query } from 'react-apollo';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_INVOICE_QUERY } from './Invoice';\nimport { UpdateButton } from './styles/Button';\nvar UPDATE_INVOICE_MUTATION = gql(_templateObject());\n\nvar UpdateInvoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateInvoice, _Component);\n\n  function UpdateInvoice() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateInvoice);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateInvoice)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(function () {\n        return _defineProperty({}, name, value);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePaidHandler\", function (e) {\n      var checked = e.target.checked;\n\n      _this.setState(function () {\n        return {\n          isPaid: checked\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateInvoice, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vars = this.state;\n      var _this$props$invoice = this.props.invoice,\n          id = _this$props$invoice.id,\n          currency = _this$props$invoice.currency,\n          isPaid = _this$props$invoice.isPaid,\n          status = _this$props$invoice.status,\n          name = _this$props$invoice.name;\n      vars.id = id;\n      console.log(vars);\n      return React.createElement(Mutation, {\n        mutation: UPDATE_INVOICE_MUTATION,\n        variables: vars,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, function (updateInvoice, _ref2) {\n        var error = _ref2.error,\n            loading = _ref2.loading;\n        return React.createElement(Form, {\n          onSubmit:\n          /*#__PURE__*/\n          function () {\n            var _ref3 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(e) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context.next = 3;\n                      return updateInvoice();\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Error, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"INV-\", name.yearIssued, \"-\", name.sfx), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"currency\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Currency: \"), React.createElement(\"select\", {\n          name: \"currency\",\n          defaultValue: currency,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"usd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"$ (USD)\"), React.createElement(\"option\", {\n          value: \"eur\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"\\u20AC (EUR)\"), React.createElement(\"option\", {\n          value: \"cad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"$\\u200E (CAD)\"), React.createElement(\"option\", {\n          value: \"jpy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"\\xA5\\u200E (JPY)\"))), React.createElement(\"label\", {\n          htmlFor: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Status(Default: DRAFT): \"), React.createElement(\"select\", {\n          name: \"status\",\n          defaultValue: status,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"DRAFT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"DRAFT\"), React.createElement(\"option\", {\n          value: \"CREATED\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"CREATED\"), React.createElement(\"option\", {\n          value: \"CREDITED\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"CREDITED\"))), React.createElement(\"label\", {\n          htmlFor: \"isPaid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Invoice has \", !isPaid && 'not', \" been paid for.\"), React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"isPaid\",\n          defaultChecked: isPaid,\n          onChange: _this2.togglePaidHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Update\"))));\n      });\n    }\n  }]);\n\n  return UpdateInvoice;\n}(Component);\n\nexport default UpdateInvoice;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/UpdateInvoice.js"],"names":["React","Component","gql","Mutation","Query","Form","Error","CURRENT_INVOICE_QUERY","UpdateButton","UPDATE_INVOICE_MUTATION","UpdateInvoice","e","target","name","value","setState","checked","isPaid","vars","state","props","invoice","id","currency","status","console","log","updateInvoice","error","loading","preventDefault","yearIssued","sfx","handleChange","togglePaidHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation, Query } from 'react-apollo';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_INVOICE_QUERY } from './Invoice';\nimport { UpdateButton } from './styles/Button';\n\nconst UPDATE_INVOICE_MUTATION = gql`\n  mutation UPDATE_INVOICE_MUTATION($id: ID!, $currency: String!, $status: String!, $isPaid: Boolean!) {\n    updateInvoice(id: $id, currency: $currency, status: $status, isPaid: $isPaid) {\n      id\n      currency\n      status\n      isPaid\n    }\n  }\n`;\n\nclass UpdateInvoice extends Component {\n  state = {};\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState(() => ({ [name]: value }));\n  };\n\n  togglePaidHandler = e => {\n    const checked = e.target.checked;\n    this.setState(() => ({\n      isPaid: checked\n    }));\n  };\n\n  render() {\n    const vars = this.state;\n    const { id, currency, isPaid, status, name } = this.props.invoice;\n    vars.id = id;\n    console.log(vars);\n\n    return (\n      <Mutation mutation={UPDATE_INVOICE_MUTATION} variables={vars}>\n        {(updateInvoice, { error, loading }) => {\n          return (\n            <Form\n              onSubmit={async e => {\n                e.preventDefault();\n                await updateInvoice();\n              }}\n            >\n              <Error error={error} />\n              <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"name\">\n                  INV-{name.yearIssued}-{name.sfx}\n                </label>\n                <div>\n                  <label htmlFor=\"currency\">\n                    <p>Currency: </p>\n                    <select name=\"currency\" defaultValue={currency} onChange={this.handleChange}>\n                      <option value=\"usd\">$ (USD)</option>\n                      <option value=\"eur\">€ (EUR)</option>\n                      <option value=\"cad\">$‎ (CAD)</option>\n                      <option value=\"jpy\">¥‎ (JPY)</option>\n                    </select>\n                  </label>\n                  <label htmlFor=\"status\">\n                    <p>Status(Default: DRAFT): </p>\n                    <select name=\"status\" defaultValue={status} onChange={this.handleChange}>\n                      <option value=\"DRAFT\">DRAFT</option>\n                      <option value=\"CREATED\">CREATED</option>\n                      <option value=\"CREDITED\">CREDITED</option>\n                    </select>\n                  </label>\n                  <label htmlFor=\"isPaid\">\n                    <div>Invoice has {!isPaid && 'not'} been paid for.</div>\n                    <input type=\"checkbox\" name=\"isPaid\" defaultChecked={isPaid} onChange={this.togglePaidHandler} />\n                  </label>\n\n                  <button type=\"submit\">Update</button>\n                </div>\n              </fieldset>\n            </Form>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default UpdateInvoice;\n"]},"metadata":{},"sourceType":"module"}