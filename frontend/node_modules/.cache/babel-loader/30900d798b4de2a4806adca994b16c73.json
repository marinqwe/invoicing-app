{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/marin/Desktop/invoicing-solutions/frontend/components/CreateItem.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ITEM_MUTATION($description: String!, $price: Float!, $invoiceId: ID!) {\\n    createItem(description: $description, price: $price, invoiceId: $invoiceId) {\\n      id\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { CURRENT_INVOICE_QUERY } from './Invoice';\nimport { SINGLE_INVOICE_QUERY } from './UpdateInvoice';\nimport formatMoney from '../lib/formatMoney';\nvar CREATE_ITEM_MUTATION = gql(_templateObject());\n\nvar CreateItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateItem, _Component);\n\n  function CreateItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      createSuccess: false,\n      description: '',\n      price: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === 'number' ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    return _this;\n  }\n\n  _createClass(CreateItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var invoiceId = this.props.invoice.id;\n      console.log('Create item invoice: ', invoiceId);\n      var _this$state = this.state,\n          description = _this$state.description,\n          price = _this$state.price;\n      return React.createElement(Mutation, {\n        mutation: CREATE_ITEM_MUTATION,\n        refetchQueries: [SINGLE_INVOICE_QUERY],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, function (createItem, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return React.createElement(Form, {\n          onSubmit:\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(e) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context.next = 3;\n                      return createItem({\n                        variables: {\n                          invoiceId: invoiceId,\n                          description: description,\n                          price: price\n                        }\n                      });\n\n                    case 3:\n                      _this2.setState(function () {\n                        return {\n                          createSuccess: true\n                        };\n                      });\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Add items to invoice\"), React.createElement(Error, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"price\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Item price (\", _this2.props.invoice.currency, \" currency)\", React.createElement(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          min: \"0\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          required: true,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          htmlFor: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Description\", React.createElement(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"description\",\n          required: true,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Submit\")));\n      });\n    }\n  }]);\n\n  return CreateItem;\n}(Component);\n\nexport default CreateItem;","map":{"version":3,"sources":["/home/marin/Desktop/invoicing-solutions/frontend/components/CreateItem.js"],"names":["React","Component","Form","Error","gql","Mutation","CURRENT_INVOICE_QUERY","SINGLE_INVOICE_QUERY","formatMoney","CREATE_ITEM_MUTATION","CreateItem","createSuccess","description","price","e","target","name","type","value","val","setState","invoiceId","props","invoice","id","console","log","state","createItem","loading","error","preventDefault","variables","currency","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { CURRENT_INVOICE_QUERY } from './Invoice';\nimport { SINGLE_INVOICE_QUERY } from './UpdateInvoice';\nimport formatMoney from '../lib/formatMoney';\n\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION($description: String!, $price: Float!, $invoiceId: ID!) {\n    createItem(description: $description, price: $price, invoiceId: $invoiceId) {\n      id\n      description\n      price\n    }\n  }\n`;\n\nclass CreateItem extends Component {\n  state = {\n    createSuccess: false,\n    description: '',\n    price: ''\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  };\n\n  render() {\n    const invoiceId = this.props.invoice.id;\n    console.log('Create item invoice: ', invoiceId);\n    const { description, price } = this.state;\n\n    return (\n      <Mutation mutation={CREATE_ITEM_MUTATION} refetchQueries={[ SINGLE_INVOICE_QUERY ]}>\n        {(createItem, { loading, error }) => (\n          <Form\n            onSubmit={async e => {\n              e.preventDefault();\n\n              await createItem({ variables: { invoiceId, description, price } });\n              this.setState(() => ({\n                createSuccess: true\n              }));\n            }}\n          >\n            <div>Add items to invoice</div>\n            <Error error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"price\">\n                Item price ({this.props.invoice.currency} currency)\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"price\"\n                  required\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <label htmlFor=\"description\">\n                Description\n                <input\n                  type=\"text\"\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"description\"\n                  required\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button type=\"submit\">Submit</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateItem;\n"]},"metadata":{},"sourceType":"module"}